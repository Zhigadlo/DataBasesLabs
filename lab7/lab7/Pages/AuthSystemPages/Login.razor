@page "/login"
@using System.ComponentModel.DataAnnotations;
@using lab7.Data;
@using lab7.Models;
@using lab7.Services;
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
@inject UserService UserService
@inject NavigationManager NavigationManager

<PageTitle>Log in</PageTitle>

<h1>Log in</h1>
<EditForm EditContext="editContext">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label for="login">Login</label>
    <InputText id="login" @bind-Value="user.Login" DisplayName="Login" /><br />

    <label for="password">Password</label>
    <InputText id="password" @bind-Value="user.Password" DisplayName="Password" /><br />
    
    <button type="submit" @onclick="UserLogin">Log in</button>
</EditForm>

@code{
    private UserModel user = new UserModel();
    EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(user);
        base.OnInitialized();
    }

    private void UserLogin()
    {
        if(editContext.Validate())
        {
            string? token = UserService.Token(user.Login, user.Password);
            if(token != null)
            {
                httpContextAccessor.HttpContext.Response.OnCompleted(async () =>
                {
                    AddTokenToCookie(token);
                    await Task.CompletedTask;
                });
                var message = $"User has successfuly logged\nLogin: {user.Login}\nToken: {token}";
                NavigationManager.NavigateTo($"/users/successpage/{message}");

            }
        }
    }

    private void AddTokenToCookie(string token)
    {
        httpContextAccessor.HttpContext.Response.Cookies.Append("access_token", token);
    }
}