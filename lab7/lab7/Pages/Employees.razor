@page "/employees"
@inject EmployeeService EmployeeService
@using Data
@using Services

<PageTitle>Employees</PageTitle>
<h1>Employees</h1>
@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>FirstName</th>
                <th>LastName</th>
                <th>MiddleName</th>
                <th>Age</th>
                <th>Education</th>
                <th>Profession</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                @if(displayPrompt[GetIndexOfPrompt(employee.Id)])
                {
                    <tr>
                        <td>@employee.FirstName</td>
                        <td>@employee.LastName</td>
                        <td>@employee.MiddleName</td>
                        <td>@employee.Age</td>
                        <td>@employee.Education</td>
                        <td>@employee.Profession.Name</td>
                        <td></td>
                        <td><button onclick="@(() => Delete(employee.Id))">Delete</button></td>
                    </tr>
                }
            }
        </tbody>
    </table>
}



@code{
    private List<Employee>? employees;
    private List<bool> displayPrompt;

    protected override async Task OnInitializedAsync()
    {
        displayPrompt = new List<bool>();
        employees = await EmployeeService.GetAll();
        employees.ForEach(e => displayPrompt.Add(true));
    }

    private int GetIndexOfPrompt(int id)
    {
        return employees.IndexOf(employees.First(e => e.Id == id));
    }

    private void Delete(int id)
    {
        EmployeeService.Delete(id);
        displayPrompt[GetIndexOfPrompt(id)] = false;
    }
}
